package org.catacombae.hfsexplorer.types.hfs;

import java.io.PrintStream;
import org.catacombae.hfsexplorer.Util;

/** This class was generated by CStructToJavaClass. */
public class CatKeyRec {
    /*
     * struct CatKeyRec
     * size: 38 bytes
     * description: 
     * 
     * BP  Size  Type      Identifier  Description                  
     * -------------------------------------------------------------
     * 0   1     SInt8     ckrKeyLen   key length (SignedByte)      
     * 1   1     SInt8     ckrResrv1   reserved (SignedByte)        
     * 2   4     SInt32    ckrParID    parent directory ID (LongInt)
     * 6   1*32  Char[32]  ckrCName    catalog node name (Str31)    
     */
    
    private final byte[] ckrKeyLen = new byte[1];
    private final byte[] ckrResrv1 = new byte[1];
    private final byte[] ckrParID = new byte[4];
    private final byte[] ckrCName = new byte[1*32];
    
    public CatKeyRec(byte[] data, int offset) {
	System.arraycopy(data, offset+0, ckrKeyLen, 0, 1);
	System.arraycopy(data, offset+1, ckrResrv1, 0, 1);
	System.arraycopy(data, offset+2, ckrParID, 0, 4);
	System.arraycopy(data, offset+6, ckrCName, 0, 1*32);
    }
    
    public static int length() { return 38; }
    
    public byte getCkrKeyLen() { return Util.readByteBE(ckrKeyLen); }
    public byte getCkrResrv1() { return Util.readByteBE(ckrResrv1); }
    public int getCkrParID() { return Util.readIntBE(ckrParID); }
    public byte[] getCkrCName() { return Util.createCopy(ckrCName); }
    
    public void printFields(PrintStream ps, String prefix) {
	ps.println(prefix + " ckrKeyLen: " + getCkrKeyLen());
	ps.println(prefix + " ckrResrv1: " + getCkrResrv1());
	ps.println(prefix + " ckrParID: " + getCkrParID());
	ps.println(prefix + " ckrCName: " + getCkrCName());
    }
    
    public void print(PrintStream ps, String prefix) {
	ps.println(prefix + "CatKeyRec:");
	printFields(ps, prefix);
    }
}
