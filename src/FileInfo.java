/*-
 * Copyright (C) 2006 Erik Larsson
 * 
 * All rights reserved.
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */

import java.io.PrintStream;

/** This class was generated by CStructToJavaClass. */
public class FileInfo {
    /*
     * struct FileInfo
     * size: 16 bytes
     * description: 
     * 
     * BP  Size  Type    Identifier     Description                         
     * ---------------------------------------------------------------------
     * 0   4     OSType  fileType       // The type of the file             
     * 4   4     OSType  fileCreator    // The file's creator               
     * 8   2     UInt16  finderFlags                                        
     * 10  4     Point   location       // File's location in the folder.   
     * 14  2     UInt16  reservedField                                      
     */
    
    private final OSType fileType;
    private final OSType fileCreator;
    private final byte[] finderFlags = new byte[2];
    private final Point location;
    private final byte[] reservedField = new byte[2];
    
    public FileInfo(byte[] data, int offset) {
	fileType = new OSType(data, offset+0);
	fileCreator = new OSType(data, offset+4);
	System.arraycopy(data, offset+8, finderFlags, 0, 2);
	location = new Point(data, offset+10);
	System.arraycopy(data, offset+14, reservedField, 0, 2);
    }
    
    public static int length() { return 16; }
    
    public OSType getFileType() { return fileType; }
    public OSType getFileCreator() { return fileCreator; }
    public short getFinderFlags() { return Util.readShortBE(finderFlags); }
    public Point getLocation() { return location; }
    public short getReservedField() { return Util.readShortBE(reservedField); }
    
    public void printFields(PrintStream ps, String prefix) {
	ps.println(prefix + " fileType: ");
	getFileType().print(ps, prefix+"  ");
	ps.println(prefix + " fileCreator: ");
	getFileCreator().print(ps, prefix+"  ");
	ps.println(prefix + " finderFlags: " + getFinderFlags());
	ps.println(prefix + " location: ");
	getLocation().print(ps, prefix+"  ");
	ps.println(prefix + " reservedField: " + getReservedField());
    }
    
    public void print(PrintStream ps, String prefix) {
	ps.println(prefix + "FileInfo:");
	printFields(ps, prefix);
    }
}
