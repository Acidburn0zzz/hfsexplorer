import java.io.PrintStream;

/** This class was generated by CStructToJavaClass. */
public class HFSPlusCatalogThread {
    /*
     * struct HFSPlusCatalogThread
     * size: ~520 bytes
     * description: 
     * 
     * BP  Size  Type              Identifier  Description
     * ---------------------------------------------------
     * 0   2     SInt16            recordType             
     * 2   2     SInt16            reserved               
     * 4   4     HFSCatalogNodeID  parentID               
     * 8   ~512  HFSUniStr255      nodeName               
     */
    
    private final byte[] recordType = new byte[2];
    private final byte[] reserved = new byte[2];
    private final HFSCatalogNodeID parentID;
    private final HFSUniStr255 nodeName;
    
    public HFSPlusCatalogThread(byte[] data, int offset) {
	System.arraycopy(data, offset+0, recordType, 0, 2);
	System.arraycopy(data, offset+2, reserved, 0, 2);
	parentID = new HFSCatalogNodeID(data, offset+4);
	nodeName = new HFSUniStr255(data, offset+8);
    }
    
    public int length() { return 2+2+parentID.length()+nodeName.length(); }
    
    public short getRecordType() { return Util.readShortBE(recordType); }
    public short getReserved() { return Util.readShortBE(reserved); }
    public HFSCatalogNodeID getParentID() { return parentID; }
    public HFSUniStr255 getNodeName() { return nodeName; }
    
    public void printFields(PrintStream ps, String prefix) {
	ps.println(prefix + " recordType: " + getRecordType());
	ps.println(prefix + " reserved: " + getReserved());
	ps.println(prefix + " parentID: ");
	getParentID().print(ps, prefix+"  ");
	ps.println(prefix + " nodeName: ");
	getNodeName().print(ps, prefix+"  ");
    }
    
    public void print(PrintStream ps, String prefix) {
	ps.println(prefix + "HFSPlusCatalogThread:");
	printFields(ps, prefix);
    }
}
