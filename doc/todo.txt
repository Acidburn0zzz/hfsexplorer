HFSExplorer TODO:

- All in bugs.txt [LÅT STÅ]
- Native file dialog in OS X
- Options menu (whether to set ownership, permissions, dates, etc. for extracted
  content).

Known issues in 0.20.1
----------------------

- Write support.

- Add support for accessing floppy drives containing HFS file systems. (can floppies be
  emulated in SheepShaver?)

- Memory usage when parsing UDIF XML MUST BE REDUCED TO CONSTANT.

- Opening files with default handler in windows may fail when the file name matches an
  executable in $PATH (in which case the executable is run instead of the file).

- Changing character encoding for HFS.

- Option to show or hide all "hidden" files. Default may be to have it turned off.

- Certain directories are VERY slow to open. Probably has something to do with symbolic
  links. Needs to be checked.

- Relative circular symbolic links don't parse. (see circularSymlinksTest.dmg)


Earlier known issues
--------------------

- Valence of a folder should be read immediatly after expansion so that the user
  doesn't have to click it to see if it contains any children.

- Create an indeterminate progress monitor window for when opening DMG files
  (reading their structures) takes a long time.

- Backing store structure view:
  View the different data layers through which the HFS+ file system was loaded.

- Detection of ISO9660/UDF file systems, to help the user understand why the
  optical media image could not be loaded.

- HFS+ volume label change. (First write-feature...)

- UDIF menu for UDIF-loaded file systems where the user can convert UDIF to ISO
  and also display properties on the UDIF file, for instance type
  (UDBZ, UDCO, etc.).
  Update: A similar feature has been added, which only extracts the file system
  to a raw file (stripped of partition systems).

- Improvements on the extract dialog:
  - "Advanced >>" button which displays checkboxes for default actions when
    encountering Overwrite situations, Rename situations, Directory already
    exists operations... etc.

- Tools menu -> Calculate file system fragmentation
  To find out how badly fragmented files are in the file system. Code is already
  there for hfsx command line tool.

- Complete journal view, in preparation of write mode. We must be able to utilize
  journaling from the beginning, because we can't trust the operating system's
  write caching features.

